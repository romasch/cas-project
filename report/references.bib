@inproceedings{graphdbbenchmark,
	author = {Pacaci, Anil and Zhou, Alice and Lin, Jimmy and \"{O}zsu, M. Tamer},
	Title = {Do We Need Specialized Graph Databases? {B}enchmarking Real-Time Social Networking Applications},
	year = {2017},
	isbn = {9781450350389},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3078447.3078459},
	doi = {10.1145/3078447.3078459},
	abstract = {With the advent of online social networks, there is an increasing demand for storage and processing of graph-structured data. Social networking applications pose new challenges to data management systems due to demand for real-time querying and manipulation of the graph structure. Recently, several systems specialized systems for graph-structured data have been introduced. However, whether we should abandon mature RDBMS technology for graph databases remains an ongoing discussion. In this paper we present an graph database benchmarking architecture built on the existing LDBC Social Network Benchmark. Our proposed architecture stresses the systems with an interactive transactional workload to better simulate the real-time nature of social networking applications. Using this improved architecture, we evaluated a selection of specialized graph databases, RDF stores, and RDBMSes adapted for graphs. We do not find that specialized graph databases provide definitively better performance.},
	booktitle = {Proceedings of the Fifth International Workshop on Graph Data-Management Experiences \& Systems},
	articleno = {12},
	numpages = {7},
	location = {Chicago, IL, USA},
	series = {GRADES'17}}

@misc{sqlpgd,
	title={{ISO/IEC} {CD} 9075-16.2 - {I}nformation technology — {D}atabase languages {SQL} — {P}art 16: {SQL} Property Graph Queries ({SQL/PGQ})},
	howpublished = {https://www.iso.org/standard/79473.html},
	note={Accessed: 2022-06-19}}
@misc{xkcdresearch,
	title={Further research is needed},
	howpublished = {https://xkcd.com/2268/},
	note={Accessed: 2022-06-16},
	author={Munroe, Randall}}
@misc{postgres,
	title={Postgre{SQL}},
	howpublished = {https://www.postgresql.org},
	note={Accessed: 2022-06-16}}
@misc{postgresMaterialize,
	title={Postgre{SQL} {CTE} Materialization},
	howpublished = {https://www.postgresql.org/docs/current/queries-with.html},
	note={Accessed: 2022-06-16}}
@misc{neo4j,
	title={Neo4j},
	howpublished = {https://www.neo4j.com},
	note={Accessed: 2022-06-16}}
@misc{offshoreleaks,
	title={The {ICIJ} Offshore Leaks Database},
	howpublished = {https://offshoreleaks.icij.org},
	note={Accessed: 2022-06-16}
}
@article{relationalalgebra,
	author = {Codd, E. F.},
	title = {A Relational Model of Data for Large Shared Data Banks},
	year = {1970},
	issue_date = {June 1970},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {13},
	number = {6},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/362384.362685},
	doi = {10.1145/362384.362685},
	abstract = {Future users of large data banks must be protected from having to know how the data is organized in the machine (the internal representation). A prompting service which supplies such information is not a satisfactory solution. Activities of users at terminals and most application programs should remain unaffected when the internal representation of data is changed and even when some aspects of the external representation are changed. Changes in data representation will often be needed as a result of changes in query, update, and report traffic and natural growth in the types of stored information.Existing noninferential, formatted data systems provide users with tree-structured files or slightly more general network models of the data. In Section 1, inadequacies of these models are discussed. A model based on n-ary relations, a normal form for data base relations, and the concept of a universal data sublanguage are introduced. In Section 2, certain operations on relations (other than logical inference) are discussed and applied to the problems of redundancy and consistency in the user's model.},
	journal = {Commun. ACM},
	month = {jun},
	pages = {377–387},
	numpages = {11},
	keywords = {data bank, relations, networks of data, hierarchies of data, security, redundancy, retrieval language, data organization, join, consistency, data integrity, composition, predicate calculus, derivability, data base, data structure}
}
@book{neo4jinaction,
	author = {Vukotic, Aleksa and Watt, Nicki and Abedrabbo, Tareq and Fox, Dominic and Partner, Jonas},
	title = {Neo4j in Action},
	year = {2014},
	isbn = {1617290769},
	publisher = {Manning Publications Co.},
	address = {USA},
	edition = {1st},
	abstract = {SummaryNeo4j in Action is a comprehensive guide to Neo4j, aimed at application developers and software architects. Using hands-on examples, you'll learn to model graph domains naturally with Neo4j graph structures. The book explores the full power of native Java APIs for graph data manipulation and querying.Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications. About the TechnologyMuch of the data today is highly connectedfrom social networks to supply chains to software dependency managementand more connections are continually being uncovered. Neo4j is an ideal graph database tool for highly connected data. It is mature, production-ready, and unique in enabling developers to simply and efficiently model and query connected data. About the BookNeo4j in Action is a comprehensive guide to designing, implementing, and querying graph data using Neo4j. Using hands-on examples, you'll learn to model graph domains naturally with Neo4j graph structures. The book explores the full power of native Java APIs for graph data manipulation and querying. It also covers Cypher, Neo4j's graph query language. Along the way, you'll learn how to integrate Neo4j into your domain-driven app using Spring Data Neo4j, as well as how to use Neo4j in standalone server or embedded modes. Knowledge of Java basics is required. No prior experience with graph data or Neo4j is assumed. What's InsideGraph database patternsHow to model data in social networksHow to use Neo4j in your Java applicationsHow to configure and set up Neo4jAbout the AuthorsAleksa Vukotic is an architect specializing in graph data models. Nicki Watt, Dominic Fox, Tareq Abedrabbo, and Jonas Partner work at OpenCredo, a Neo Technology partner, and have been involved in many projects using Neo4j.Table of ContentsPART 1 INTRODUCTION TO NEO4JA case for a Neo4j databaseData modeling in Neo4jStarting development with Neo4j The power of traversalsIndexing the dataPART 2 APPLICATION DEVELOPMENT WITH NEO4JCypher: Neo4j query languageTransactionsTraversals in depthSpring Data Neo4jPART 3 NEO4J IN PRODUCTIONNeo4j: embedded versus server mode}
}

@incollection{neo4jinaction:chapter11,
	author = {Vukotic, Aleksa and Watt, Nicki and Abedrabbo, Tareq and Fox, Dominic and Partner, Jonas},
	title = {Neo4j in Action},
	year = {2014},
	isbn = {1617290769},
	publisher = {Manning Publications Co.},
	address = {USA},
	edition = {1st},
	chapter = 11,
}
@article{dijkstra,
	author = {Dijkstra, E. W.},
	title = {A Note on Two Problems in Connexion with Graphs},
	year = {1959},
	issue_date = {December  1959},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	volume = {1},
	number = {1},
	issn = {0029-599X},
	url = {https://doi.org/10.1007/BF01386390},
	doi = {10.1007/BF01386390},
	journal = {Numer. Math.},
	month = {dec},
	pages = {269–271},
	numpages = {3}
}
